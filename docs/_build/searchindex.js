Search.setIndex({"docnames": ["first_steps/install", "first_steps/nomenclature", "first_steps/simple_use", "index", "pycofbuilder"], "filenames": ["first_steps/install.rst", "first_steps/nomenclature.rst", "first_steps/simple_use.rst", "index.rst", "pycofbuilder.rst"], "titles": ["Installing pyCOFBuilder", "COFs and Building Blocks nomenclature", "Generating COF structures", "Welcome to pyCOFBuilder\u2019s documentation!", "pyCOFBuilder package"], "terms": {"The": [0, 1, 2, 3, 4], "packag": [0, 3], "i": [0, 1, 2, 3, 4], "written": 0, "python": [0, 3], "few": 0, "depend": [0, 4], "easiest": 0, "wai": [0, 1], "conda": 0, "manag": 0, "If": [0, 3, 4], "you": [0, 2, 3], "do": 0, "have": 0, "we": [0, 1], "recommend": 0, "anaconda": 0, "distribut": 0, "onc": 0, "can": [0, 1, 2, 3, 4], "creat": [0, 2, 3, 4], "new": [0, 3], "follow": [0, 1, 2], "command": 0, "env": 0, "file": [0, 2, 3, 4], "yml": 0, "3": [0, 1, 2, 4], "10": 0, "pymatgen": 0, "2022": 0, "0": [0, 2, 4], "numpi": [0, 4], "scipi": 0, "6": [0, 1, 2, 4], "simplejson": 0, "ase": 0, "gemmi": 0, "don": 0, "t": [0, 1], "forget": 0, "activ": 0, "befor": 0, "run": 0, "To": [0, 1, 2], "so": [0, 4], "It": 0, "possibl": [0, 2], "just": [0, 3], "download": 0, "sy": 0, "exemplifi": 0, "below": [0, 1], "append": 0, "path": [0, 4], "path_to_pycofbuild": 0, "src": 0, "pcb": [0, 2], "rememb": 0, "chang": [0, 1, 2, 3], "directori": [0, 4], "where": [0, 1, 4], "In": [1, 4], "order": 1, "ensur": 1, "greater": 1, "reproduc": 1, "well": 1, "quickli": 1, "easili": [1, 2, 3], "access": [1, 2], "relev": 1, "inform": [1, 2, 3, 4], "from": [1, 4], "ve": 1, "develop": 1, "simpl": [1, 3], "name": [1, 2, 4], "thi": [1, 2, 4], "structur": [1, 3, 4], "gener": [1, 3], "speak": 1, "describ": 1, "connect": [1, 3], "coval": [1, 3, 4], "bond": [1, 4], "underli": 1, "present": 1, "specif": [1, 2, 4], "pattern": [1, 3], "degre": [1, 3, 4], "repres": [1, 4], "buildingblock1": 1, "buildingblock2": 1, "pycofbuild": [1, 2], "expect": 1, "fix": 1, "format": [1, 2, 3, 4], "each": [1, 4], "characterist": 1, "card": 1, "separ": 1, "dash": 1, "ar": [1, 3, 4], "smaller": 1, "reticular": [1, 4], "2d": [1, 3, 4], "3d": [1, 3, 4], "also": [1, 3, 4], "set": [1, 2, 3, 4], "rule": 1, "symmetry_core_connector_functionalgroupr1_functionalgroupr2_functionalgroupr3_": 1, "For": 1, "l2": 1, "t3": 1, "s4": 1, "h6": 1, "4": 1, "letter": 1, "code": [1, 2, 4], "refer": 1, "type": [1, 4], "us": [1, 3, 4], "assembli": 1, "ex": 1, "nh2": 1, "cho": 1, "conhnh2": 1, "etc": 1, "functionalgrouprn": 1, "nth": 1, "number": [1, 4], "accord": 1, "avail": [1, 4], "note": 1, "everi": 1, "an": [1, 2, 3, 4], "underlin": 1, "_": 1, "make": 1, "easi": 1, "split": 1, "symbol": [1, 4], "geometr": 1, "figur": 1, "l": 1, "2": [1, 2, 4], "line": 1, "triangl": 1, "": 1, "squar": [1, 4], "r": 1, "rectangl": 1, "tetrahedron": 1, "o": [1, 2], "octahedron": 1, "p": [1, 2], "trigon": 1, "prism": 1, "h": [1, 2], "hexagon": [1, 2, 4], "c": [1, 2, 4], "8": 1, "cube": 1, "A": [1, 2, 4], "antipr": 1, "e": 1, "octagon": 1, "b": [1, 4], "12": [1, 2], "cuboctahedron": 1, "icosahedron": 1, "u": 1, "truncat": 1, "x": 1, "three": 1, "augment": 1, "_a": 1, "t3_benz_nh2_oh": 2, "l2_benz_cho_h": 2, "hcb_a": 2, "aa": 2, "import": 2, "framework": [2, 3], "t3_benz_cho_oh": 2, "l2_benz_nh2_h": 2, "save": [2, 4], "fmt": [2, 4], "cif": [2, 4], "supercel": [2, 4], "1": [2, 4], "save_dir": [2, 4], "should": 2, "see": 2, "output": [2, 4], "l2_benz_cho_h_h": 2, "p6": 2, "m": 2, "175": 2, "sym": 2, "op": 2, "default": [2, 4], "other": [2, 3], "valu": [2, 4], "option": [2, 4], "out": [2, 4], "folder": [2, 4], "print": [2, 4], "some": [2, 3], "about": 2, "turn": 2, "off": [2, 4], "silent": 2, "true": [2, 4], "current": [2, 4], "select": [2, 4], "xsf": [2, 4], "pdb": [2, 4], "cjson": [2, 3], "vasp": [2, 4], "turbomol": [2, 4], "pqr": [2, 4], "qe": [2, 4], "gjf": [2, 4], "xyz": [2, 4], "besid": 2, "variabl": 2, "now": 2, "object": [2, 4], "ha": [2, 4], "attribut": 2, "smile": [2, 4], "n": [2, 4], "c1": 2, "c1o": 2, "lattic": [2, 4], "arrai": [2, 4], "22": 2, "49540055": 2, "11": 2, "24770028": 2, "19": [2, 4], "48158835": 2, "n_atom": [2, 4], "72": 2, "space_group": [2, 4], "base": [3, 4], "organ": [3, 4], "builder": 3, "open": 3, "sourc": [3, 4], "tool": 3, "manipul": [3, 4], "cof": [3, 4], "provid": 3, "lightweight": 3, "fast": 3, "method": [3, 4], "differ": 3, "topologi": [3, 4], "build": [3, 4], "block": [3, 4], "chemistri": 3, "ad": 3, "function": [3, 4], "group": [3, 4], "stack": [3, 4], "interpenetr": 3, "design": 3, "integr": 3, "further": 3, "analysi": [3, 4], "simul": 3, "here": [3, 4], "find": 3, "tutori": 3, "exampl": [3, 4], "how": 3, "These": 3, "aim": 3, "user": 3, "peopl": 3, "more": 3, "experi": 3, "molecular": 3, "model": 3, "veri": 3, "basic": 3, "familiar": 3, "mayb": 3, "best": 3, "start": 3, "otherwis": [3, 4], "skip": 3, "go": 3, "next": 3, "section": 3, "instal": 3, "nomenclatur": 3, "chose": 3, "first_step": 3, "file_format": 3, "visual": 3, "submodul": 3, "building_block": 3, "modul": 3, "io_tool": 3, "index": 3, "search": 3, "page": 3, "detail": 4, "document": 4, "buildingblock": 4, "class": 4, "none": 4, "verbos": 4, "fals": 4, "save_bb": 4, "check_exist": 4, "from_nam": 4, "automat": 4, "read": 4, "buid": 4, "its": 4, "get_available_r": 4, "get_available_conector": 4, "conector": 4, "get_available_cor": 4, "core": 4, "get_buildingblock_list": 4, "shape": 4, "connector_group": 4, "return": 4, "unitari": 4, "print_structur": 4, "atom_label": 4, "pos_x": 4, "pos_i": 4, "pos_z": 4, "remove_x": 4, "replace_x": 4, "target_typ": 4, "extens": 4, "implement": 4, "chemic": 4, "json": 4, "chemjson": 4, "manupul": 4, "file_nam": 4, "str": 4, "cell_paramet": 4, "cell_matrix": 4, "cartesian_posit": 4, "cartesian": 4, "posit": 4, "fractional_posit": 4, "fraction": 4, "atomic_numb": 4, "atomic_typ": 4, "atomic_label": 4, "label": 4, "formula": 4, "properti": 4, "dict": 4, "partial_charg": 4, "dictionari": 4, "contan": 4, "partial": 4, "charg": 4, "ddec": 4, "15": 4, "eqeq": 4, "05": 4, "as_dict": 4, "from_cif": 4, "from_cjson": 4, "from_gjf": 4, "gaussian": 4, "input": 4, "from_xyz": 4, "set_atomic_numb": 4, "updat": 4, "set_atomic_typ": 4, "set_cartesian_posit": 4, "set_cell_matrix": 4, "set_cell_paramet": 4, "set_fractional_posit": 4, "set_properti": 4, "write_cjson": 4, "write": 4, "definit": 4, "out_dir": 4, "entiti": 4, "materi": 4, "result": 4, "defin": 4, "control": 4, "normal": 4, "high": 4, "debug": 4, "bool": 4, "lib_path": 4, "diment": 4, "lattice_sg": 4, "space_group_n": 4, "mass": 4, "composit": 4, "int": 4, "multipl": 4, "chiral": 4, "atom_typ": 4, "atom_po": 4, "symm_tol": 4, "float": 4, "angle_tol": 4, "available_2d_topologi": 4, "available_3d_topologi": 4, "available_topologi": 4, "all": 4, "available_stack": 4, "stake": 4, "lib_bb": 4, "string": 4, "contain": 4, "bb_lib": 4, "get_available_topologi": 4, "check_name_concist": 4, "check": 4, "correct": 4, "tupl": 4, "net": 4, "from_building_block": 4, "frameworknam": 4, "case": 4, "error": 4, "rais": 4, "requir": 4, "bb1": 4, "bb2": 4, "kwarg": 4, "first": 4, "second": 4, "network": 4, "dimension": 4, "primit": 4, "By": 4, "convent": 4, "convert_cif_2_q": 4, "out_path": 4, "convert": 4, "quantum": 4, "espresso": 4, "doe": 4, "neet": 4, "extent": 4, "convert_cif_2_xyz": 4, "convert_gjf_2_xyz": 4, "convert_json_2_cif": 4, "origin_path": 4, "destiny_path": 4, "charge_typ": 4, "convert_xyz_2_gjf": 4, "create_cof_json": 4, "empti": 4, "create_empty_cjson": 4, "create_structure_cjson": 4, "structurenam": 4, "cellparamet": 4, "cellmatrix": 4, "atomtyp": 4, "atomposit": 4, "cartesianposit": 4, "atomlabel": 4, "bondord": 4, "partialcharg": 4, "generate_mol_dict": 4, "read_cif": 4, "conta": 4, "nx3": 4, "coordin": 4, "3x3": 4, "read_gjf_fil": 4, "read_json": 4, "read_xyz_fil": 4, "save_chemjson": 4, "frac_coord": 4, "save_cif": 4, "save_csv": 4, "data": 4, "delimit": 4, "head": 4, "csv": 4, "column": 4, "save_gjf": 4, "text": 4, "opt": 4, "pm6": 4, "save_json": 4, "save_pdb": 4, "ndarrai": 4, "form": 4, "save_pqr": 4, "save_q": 4, "calc_typ": 4, "scf": 4, "pwscf": 4, "input_dict": 4, "specifi": 4, "quantumespresso": 4, "must": 4, "kei": 4, "system": 4, "electron": 4, "ion": 4, "correspond": 4, "kpoint": 4, "item": 4, "grid": 4, "integ": 4, "addition": 4, "kspace": 4, "space": 4, "pw": 4, "nscf": 4, "band": 4, "vc": 4, "relax": 4, "save_turbomol": 4, "coord": 4, "save_vasp": 4, "coords_are_cartesian": 4, "save_xsf": 4, "save_xyz": 4, "write_json": 4, "cof_json": 4, "unit": 4, "dimens": 4, "could": 4, "radian": 4, "co": 4, "rtype": 4, "calculate_unitcel": 4, "cutoff": 4, "repetit": 4, "length": 4, "larger": 4, "than": 4, "twice": 4, "interact": 4, "potenti": 4, "cut": 4, "radiu": 4, "raspa": 4, "consid": 4, "perpendicular": 4, "direct": 4, "ab": 4, "bc": 4, "ca": 4, "plane": 4, "thu": 4, "who": 4, "crystallograph": 4, "would": 4, "project": 4, "mean": 4, "cross": 4, "product": 4, "repit": 4, "y": 4, "z": 4, "cell_to_cellpar": 4, "alpha": 4, "beta": 4, "gamma": 4, "unless": 4, "v3": 4, "cellpar": 4, "cell_to_ibrav": 4, "ibrav": 4, "cellpar_to_cel": 4, "ab_norm": 4, "a_direct": 4, "orient": 4, "parallel": 4, "which": 4, "va": 4, "vb": 4, "along": 4, "row": 4, "onto": 4, "cellpar_to_lammpsbox": 4, "angle_in_degre": 4, "box": 4, "lx": 4, "ly": 4, "lz": 4, "xy": 4, "xz": 4, "yz": 4, "lammp": 4, "param": 4, "edg": 4, "side": 4, "express": 4, "1x6": 4, "array_lik": 4, "change_x_atom": 4, "process": 4, "po": 4, "classify_unit_cel": 4, "thr": 4, "001": 4, "determin": 4, "bravai": 4, "cubic": 4, "tetragon": 4, "orthorhomb": 4, "monoclin": 4, "triclin": 4, "threshold": 4, "numer": 4, "1e": 4, "cell_typ": 4, "closest_atom": 4, "label_1": 4, "pos_1": 4, "closest": 4, "closest_atom_struc": 4, "create_cellbox": 4, "cellbox": 4, "same": 4, "elements_dict": 4, "atomic_mass": 4, "prop": 4, "full_nam": 4, "polariz": 4, "pauling_electroneg": 4, "thermo_electroneg": 4, "mulliken_electroneg": 4, "sanderson_electroneg": 4, "allen_electroneg": 4, "ghosh_electroneg": 4, "martynov_batsanov_electroneg": 4, "atomic_radiu": 4, "covalent_radiu": 4, "vdw_radiu": 4, "prop_dic": 4, "respect": 4, "equal_valu": 4, "val1": 4, "val2": 4, "equal": 4, "find_index": 4, "e_list": 4, "formula_from_atom_list": 4, "get_bond_atom": 4, "connector_1": 4, "connector_2": 4, "get_cartesian_to_fractional_matrix": 4, "transform": 4, "t_matrix": 4, "r_frac": 4, "np": 4, "dot": 4, "r_cart": 4, "get_fractional_to_cartesian_matrix": 4, "cell_a": 4, "cell_b": 4, "cell_c": 4, "v_cart": 4, "v_frac": 4, "get_kgrid": 4, "distanc": 4, "k": 4, "point": 4, "kx": 4, "ky": 4, "kz": 4, "get_reciprocal_vector": 4, "b1": 4, "b_1": 4, "b2": 4, "b_2": 4, "b3": 4, "b_3": 4, "ibrav_to_cel": 4, "celldm1": 4, "celldm2": 4, "celldm3": 4, "celldm4": 4, "celldm5": 4, "celldm6": 4, "celldmx": 4, "print_command": 4, "match": 4, "print_framework_nam": 4, "hall": 4, "space_numb": 4, "symm_op": 4, "rmsd": 4, "v": 4, "w": 4, "root": 4, "deviat": 4, "d": 4, "rotation_matrix_from_vector": 4, "rotation_matrix": 4, "when": 4, "appli": 4, "smiles_to_xsmil": 4, "smiles_str": 4, "extend": 4, "xsmile": 4, "special": 4, "xsmiles_label": 4, "imag": 4, "unit_vector": 4}, "objects": {"": [[4, 0, 0, "-", "pycofbuilder"]], "pycofbuilder": [[4, 1, 1, "", "BuildingBlock"], [4, 1, 1, "", "Framework"], [4, 0, 0, "-", "building_block"], [4, 0, 0, "-", "cjson"], [4, 0, 0, "-", "framework"], [4, 0, 0, "-", "io_tools"], [4, 0, 0, "-", "tools"]], "pycofbuilder.BuildingBlock": [[4, 2, 1, "", "check_existence"], [4, 2, 1, "", "from_name"], [4, 2, 1, "", "get_available_R"], [4, 2, 1, "", "get_available_conector"], [4, 2, 1, "", "get_available_core"], [4, 2, 1, "", "get_buildingblock_list"], [4, 2, 1, "", "n_atoms"], [4, 2, 1, "", "print_structure"], [4, 2, 1, "", "remove_X"], [4, 2, 1, "", "replace_X"], [4, 2, 1, "", "save"]], "pycofbuilder.Framework": [[4, 3, 1, "", "angle_tol"], [4, 3, 1, "", "atom_pos"], [4, 3, 1, "", "atom_types"], [4, 3, 1, "", "available_2D_topologies"], [4, 3, 1, "", "available_3D_topologies"], [4, 3, 1, "", "available_stacking"], [4, 3, 1, "", "available_topologies"], [4, 3, 1, "", "charge"], [4, 2, 1, "id7", "check_name_concistency"], [4, 3, 1, "", "chirality"], [4, 3, 1, "", "composition"], [4, 3, 1, "", "dimention"], [4, 2, 1, "id8", "from_building_blocks"], [4, 2, 1, "id9", "from_name"], [4, 2, 1, "id10", "get_available_topologies"], [4, 3, 1, "id6", "lattice"], [4, 3, 1, "", "lattice_sgs"], [4, 3, 1, "", "lib_bb"], [4, 3, 1, "", "lib_path"], [4, 3, 1, "", "mass"], [4, 3, 1, "", "multiplicity"], [4, 3, 1, "", "name"], [4, 3, 1, "", "out_dir"], [4, 2, 1, "id11", "save"], [4, 3, 1, "", "save_bb"], [4, 3, 1, "", "space_group"], [4, 3, 1, "", "space_group_n"], [4, 3, 1, "", "stacking"], [4, 3, 1, "", "symm_tol"], [4, 3, 1, "", "topology"], [4, 3, 1, "", "verbosity"]], "pycofbuilder.building_block": [[4, 1, 1, "", "BuildingBlock"]], "pycofbuilder.building_block.BuildingBlock": [[4, 2, 1, "", "check_existence"], [4, 2, 1, "", "from_name"], [4, 2, 1, "", "get_available_R"], [4, 2, 1, "", "get_available_conector"], [4, 2, 1, "", "get_available_core"], [4, 2, 1, "", "get_buildingblock_list"], [4, 2, 1, "", "n_atoms"], [4, 2, 1, "", "print_structure"], [4, 2, 1, "", "remove_X"], [4, 2, 1, "", "replace_X"], [4, 2, 1, "", "save"]], "pycofbuilder.cjson": [[4, 1, 1, "", "ChemJSON"]], "pycofbuilder.cjson.ChemJSON": [[4, 2, 1, "", "as_dict"], [4, 3, 1, "", "atomic_labels"], [4, 3, 1, "", "atomic_numbers"], [4, 3, 1, "", "atomic_types"], [4, 3, 1, "", "cartesian_positions"], [4, 3, 1, "", "cell_matrix"], [4, 3, 1, "", "cell_parameters"], [4, 3, 1, "", "file_name"], [4, 3, 1, "", "formula"], [4, 3, 1, "", "fractional_positions"], [4, 2, 1, "", "from_cif"], [4, 2, 1, "", "from_cjson"], [4, 2, 1, "", "from_gjf"], [4, 2, 1, "", "from_xyz"], [4, 3, 1, "", "name"], [4, 3, 1, "", "partial_charges"], [4, 3, 1, "", "properties"], [4, 2, 1, "", "set_atomic_numbers"], [4, 2, 1, "", "set_atomic_types"], [4, 2, 1, "", "set_cartesian_positions"], [4, 2, 1, "", "set_cell_matrix"], [4, 2, 1, "", "set_cell_parameters"], [4, 2, 1, "", "set_fractional_positions"], [4, 2, 1, "", "set_properties"], [4, 2, 1, "", "write_cjson"]], "pycofbuilder.framework": [[4, 1, 1, "", "Framework"]], "pycofbuilder.framework.Framework": [[4, 3, 1, "", "angle_tol"], [4, 3, 1, "", "atom_pos"], [4, 3, 1, "", "atom_types"], [4, 3, 1, "", "available_2D_topologies"], [4, 3, 1, "", "available_3D_topologies"], [4, 3, 1, "", "available_stacking"], [4, 3, 1, "", "available_topologies"], [4, 3, 1, "", "charge"], [4, 2, 1, "id1", "check_name_concistency"], [4, 3, 1, "", "chirality"], [4, 3, 1, "", "composition"], [4, 3, 1, "", "dimention"], [4, 2, 1, "id2", "from_building_blocks"], [4, 2, 1, "id3", "from_name"], [4, 2, 1, "id4", "get_available_topologies"], [4, 3, 1, "id0", "lattice"], [4, 3, 1, "", "lattice_sgs"], [4, 3, 1, "", "lib_bb"], [4, 3, 1, "", "lib_path"], [4, 3, 1, "", "mass"], [4, 3, 1, "", "multiplicity"], [4, 3, 1, "", "name"], [4, 3, 1, "", "out_dir"], [4, 2, 1, "id5", "save"], [4, 3, 1, "", "save_bb"], [4, 3, 1, "", "space_group"], [4, 3, 1, "", "space_group_n"], [4, 3, 1, "", "stacking"], [4, 3, 1, "", "symm_tol"], [4, 3, 1, "", "topology"], [4, 3, 1, "", "verbosity"]], "pycofbuilder.io_tools": [[4, 4, 1, "", "convert_cif_2_qe"], [4, 4, 1, "", "convert_cif_2_xyz"], [4, 4, 1, "", "convert_gjf_2_xyz"], [4, 4, 1, "", "convert_json_2_cif"], [4, 4, 1, "", "convert_xyz_2_gjf"], [4, 4, 1, "", "create_COF_json"], [4, 4, 1, "", "create_empty_CJSON"], [4, 4, 1, "", "create_structure_CJSON"], [4, 4, 1, "", "generate_mol_dict"], [4, 4, 1, "", "read_cif"], [4, 4, 1, "", "read_gjf_file"], [4, 4, 1, "", "read_json"], [4, 4, 1, "", "read_xyz_file"], [4, 4, 1, "", "save_chemjson"], [4, 4, 1, "", "save_cif"], [4, 4, 1, "", "save_csv"], [4, 4, 1, "", "save_gjf"], [4, 4, 1, "", "save_json"], [4, 4, 1, "", "save_pdb"], [4, 4, 1, "", "save_pqr"], [4, 4, 1, "", "save_qe"], [4, 4, 1, "", "save_turbomole"], [4, 4, 1, "", "save_vasp"], [4, 4, 1, "", "save_xsf"], [4, 4, 1, "", "save_xyz"], [4, 4, 1, "", "write_json"]], "pycofbuilder.tools": [[4, 4, 1, "", "angle"], [4, 4, 1, "", "calculate_UnitCells"], [4, 4, 1, "", "cell_to_cellpar"], [4, 4, 1, "", "cell_to_ibrav"], [4, 4, 1, "", "cellpar_to_cell"], [4, 4, 1, "", "cellpar_to_lammpsbox"], [4, 4, 1, "", "change_X_atoms"], [4, 4, 1, "", "classify_unit_cell"], [4, 4, 1, "", "closest_atom"], [4, 4, 1, "", "closest_atom_struc"], [4, 4, 1, "", "create_CellBox"], [4, 4, 1, "", "elements_dict"], [4, 4, 1, "", "equal_value"], [4, 4, 1, "", "find_index"], [4, 4, 1, "", "formula_from_atom_list"], [4, 4, 1, "", "get_bond_atom"], [4, 4, 1, "", "get_cartesian_to_fractional_matrix"], [4, 4, 1, "", "get_fractional_to_cartesian_matrix"], [4, 4, 1, "", "get_kgrid"], [4, 4, 1, "", "get_reciprocal_vectors"], [4, 4, 1, "", "ibrav_to_cell"], [4, 4, 1, "", "print_command"], [4, 4, 1, "", "print_framework_name"], [4, 4, 1, "", "rmsd"], [4, 4, 1, "", "rotation_matrix_from_vectors"], [4, 4, 1, "", "smiles_to_xsmiles"], [4, 4, 1, "", "unit_vector"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"instal": 0, "pycofbuild": [0, 3, 4], "set": 0, "environ": 0, "requir": 0, "option": 0, "1": 0, "us": 0, "pip": 0, "2": 0, "manual": 0, "import": 0, "modul": [0, 4], "cof": [1, 2], "build": 1, "block": 1, "nomenclatur": 1, "symmetri": 1, "titl": 1, "core": 1, "connector": 1, "group": 1, "function": 1, "net": 1, "stack": 1, "interpenetr": 1, "gener": 2, "structur": 2, "welcom": 3, "": 3, "document": 3, "first": 3, "step": 3, "code": 3, "content": [3, 4], "indic": 3, "tabl": 3, "packag": 4, "submodul": 4, "building_block": 4, "cjson": 4, "framework": 4, "io_tool": 4, "tool": 4, "calcul": 4, "angl": 4, "between": 4, "two": 4, "vector": 4, "v1": 4, "v2": 4, "chang": 4, "x": 4, "atom": 4, "desir": 4, "bond_atom": 4, "remov": 4, "r": 4, "find": 4, "index": 4, "given": 4, "element": 4, "list": 4, "get": 4, "reciproc": 4, "cell": 4, "paramet": 4, "rotat": 4, "matrix": 4, "align": 4, "vec1": 4, "vec2": 4}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Installing pyCOFBuilder": [[0, "installing-pycofbuilder"]], "Setting the environment": [[0, "setting-the-environment"]], "Requirements": [[0, "requirements"]], "Installation": [[0, "installation"]], "Option 1: Using pip": [[0, "option-1-using-pip"]], "Option 2: Manually importing the module": [[0, "option-2-manually-importing-the-module"]], "COFs and Building Blocks nomenclature": [[1, "cofs-and-building-blocks-nomenclature"]], "COF nomenclature": [[1, "cof-nomenclature"]], "Building blocks": [[1, "building-blocks"]], "Symmetry": [[1, "symmetry"]], "Title": [[1, "id1"]], "Cores": [[1, "cores"]], "Connector groups": [[1, "connector-groups"]], "Functional groups": [[1, "functional-groups"]], "Nets": [[1, "nets"]], "Stacking / Interpenetration": [[1, "stacking-interpenetration"]], "Generating COF structures": [[2, "generating-cof-structures"]], "Welcome to pyCOFBuilder\u2019s documentation!": [[3, "welcome-to-pycofbuilder-s-documentation"]], "First steps": [[3, "first-steps"]], "Code contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "pyCOFBuilder package": [[4, "pycofbuilder-package"]], "Submodules": [[4, "submodules"]], "pycofbuilder.building_block module": [[4, "module-pycofbuilder.building_block"]], "pycofbuilder.cjson module": [[4, "module-pycofbuilder.cjson"]], "pycofbuilder.framework module": [[4, "module-pycofbuilder.framework"]], "pycofbuilder.io_tools module": [[4, "module-pycofbuilder.io_tools"]], "pycofbuilder.tools module": [[4, "module-pycofbuilder.tools"]], "Calculates the angle between two vectors v1 and v2.": [[4, "calculates-the-angle-between-two-vectors-v1-and-v2"]], "Changes the X atom for the desired bond_atom or remove it if bond_atom == \u2018R\u2019.": [[4, "changes-the-x-atom-for-the-desired-bond-atom-or-remove-it-if-bond-atom-r"]], "Finds the index of a given element in a list": [[4, "finds-the-index-of-a-given-element-in-a-list"]], "Get the reciprocal vectors of a cell given in cell parameters of cell vectors": [[4, "get-the-reciprocal-vectors-of-a-cell-given-in-cell-parameters-of-cell-vectors"]], "Find the rotation matrix that aligns vec1 to vec2": [[4, "find-the-rotation-matrix-that-aligns-vec1-to-vec2"]], "Module contents": [[4, "module-pycofbuilder"]]}, "indexentries": {"buildingblock (class in pycofbuilder)": [[4, "pycofbuilder.BuildingBlock"]], "buildingblock (class in pycofbuilder.building_block)": [[4, "pycofbuilder.building_block.BuildingBlock"]], "chemjson (class in pycofbuilder.cjson)": [[4, "pycofbuilder.cjson.ChemJSON"]], "framework (class in pycofbuilder)": [[4, "pycofbuilder.Framework"]], "framework (class in pycofbuilder.framework)": [[4, "pycofbuilder.framework.Framework"]], "angle() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.angle"]], "angle_tol (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.angle_tol"]], "angle_tol (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.angle_tol"]], "as_dict() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.as_dict"]], "atom_pos (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.atom_pos"]], "atom_pos (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.atom_pos"]], "atom_types (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.atom_types"]], "atom_types (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.atom_types"]], "atomic_labels (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.atomic_labels"]], "atomic_numbers (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.atomic_numbers"]], "atomic_types (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.atomic_types"]], "available_2d_topologies (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.available_2D_topologies"]], "available_2d_topologies (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.available_2D_topologies"]], "available_3d_topologies (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.available_3D_topologies"]], "available_3d_topologies (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.available_3D_topologies"]], "available_stacking (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.available_stacking"]], "available_stacking (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.available_stacking"]], "available_topologies (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.available_topologies"]], "available_topologies (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.available_topologies"]], "calculate_unitcells() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.calculate_UnitCells"]], "cartesian_positions (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.cartesian_positions"]], "cell_matrix (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.cell_matrix"]], "cell_parameters (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.cell_parameters"]], "cell_to_cellpar() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.cell_to_cellpar"]], "cell_to_ibrav() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.cell_to_ibrav"]], "cellpar_to_cell() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.cellpar_to_cell"]], "cellpar_to_lammpsbox() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.cellpar_to_lammpsbox"]], "change_x_atoms() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.change_X_atoms"]], "charge (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.charge"]], "charge (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.charge"]], "check_existence() (pycofbuilder.buildingblock method)": [[4, "pycofbuilder.BuildingBlock.check_existence"]], "check_existence() (pycofbuilder.building_block.buildingblock method)": [[4, "pycofbuilder.building_block.BuildingBlock.check_existence"]], "check_name_concistency() (pycofbuilder.framework method)": [[4, "id7"], [4, "pycofbuilder.Framework.check_name_concistency"]], "check_name_concistency() (pycofbuilder.framework.framework method)": [[4, "id1"], [4, "pycofbuilder.framework.Framework.check_name_concistency"]], "chirality (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.chirality"]], "chirality (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.chirality"]], "classify_unit_cell() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.classify_unit_cell"]], "closest_atom() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.closest_atom"]], "closest_atom_struc() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.closest_atom_struc"]], "composition (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.composition"]], "composition (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.composition"]], "convert_cif_2_qe() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.convert_cif_2_qe"]], "convert_cif_2_xyz() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.convert_cif_2_xyz"]], "convert_gjf_2_xyz() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.convert_gjf_2_xyz"]], "convert_json_2_cif() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.convert_json_2_cif"]], "convert_xyz_2_gjf() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.convert_xyz_2_gjf"]], "create_cof_json() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.create_COF_json"]], "create_cellbox() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.create_CellBox"]], "create_empty_cjson() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.create_empty_CJSON"]], "create_structure_cjson() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.create_structure_CJSON"]], "dimention (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.dimention"]], "dimention (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.dimention"]], "elements_dict() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.elements_dict"]], "equal_value() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.equal_value"]], "file_name (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.file_name"]], "find_index() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.find_index"]], "formula (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.formula"]], "formula_from_atom_list() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.formula_from_atom_list"]], "fractional_positions (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.fractional_positions"]], "from_building_blocks() (pycofbuilder.framework method)": [[4, "id8"], [4, "pycofbuilder.Framework.from_building_blocks"]], "from_building_blocks() (pycofbuilder.framework.framework method)": [[4, "id2"], [4, "pycofbuilder.framework.Framework.from_building_blocks"]], "from_cif() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.from_cif"]], "from_cjson() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.from_cjson"]], "from_gjf() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.from_gjf"]], "from_name() (pycofbuilder.buildingblock method)": [[4, "pycofbuilder.BuildingBlock.from_name"]], "from_name() (pycofbuilder.framework method)": [[4, "id9"], [4, "pycofbuilder.Framework.from_name"]], "from_name() (pycofbuilder.building_block.buildingblock method)": [[4, "pycofbuilder.building_block.BuildingBlock.from_name"]], "from_name() (pycofbuilder.framework.framework method)": [[4, "id3"], [4, "pycofbuilder.framework.Framework.from_name"]], "from_xyz() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.from_xyz"]], "generate_mol_dict() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.generate_mol_dict"]], "get_available_r() (pycofbuilder.buildingblock method)": [[4, "pycofbuilder.BuildingBlock.get_available_R"]], "get_available_r() (pycofbuilder.building_block.buildingblock method)": [[4, "pycofbuilder.building_block.BuildingBlock.get_available_R"]], "get_available_conector() (pycofbuilder.buildingblock method)": [[4, "pycofbuilder.BuildingBlock.get_available_conector"]], "get_available_conector() (pycofbuilder.building_block.buildingblock method)": [[4, "pycofbuilder.building_block.BuildingBlock.get_available_conector"]], "get_available_core() (pycofbuilder.buildingblock method)": [[4, "pycofbuilder.BuildingBlock.get_available_core"]], "get_available_core() (pycofbuilder.building_block.buildingblock method)": [[4, "pycofbuilder.building_block.BuildingBlock.get_available_core"]], "get_available_topologies() (pycofbuilder.framework method)": [[4, "id10"], [4, "pycofbuilder.Framework.get_available_topologies"]], "get_available_topologies() (pycofbuilder.framework.framework method)": [[4, "id4"], [4, "pycofbuilder.framework.Framework.get_available_topologies"]], "get_bond_atom() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.get_bond_atom"]], "get_buildingblock_list() (pycofbuilder.buildingblock method)": [[4, "pycofbuilder.BuildingBlock.get_buildingblock_list"]], "get_buildingblock_list() (pycofbuilder.building_block.buildingblock method)": [[4, "pycofbuilder.building_block.BuildingBlock.get_buildingblock_list"]], "get_cartesian_to_fractional_matrix() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.get_cartesian_to_fractional_matrix"]], "get_fractional_to_cartesian_matrix() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.get_fractional_to_cartesian_matrix"]], "get_kgrid() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.get_kgrid"]], "get_reciprocal_vectors() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.get_reciprocal_vectors"]], "ibrav_to_cell() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.ibrav_to_cell"]], "lattice (pycofbuilder.framework attribute)": [[4, "id6"], [4, "pycofbuilder.Framework.lattice"]], "lattice (pycofbuilder.framework.framework attribute)": [[4, "id0"], [4, "pycofbuilder.framework.Framework.lattice"]], "lattice_sgs (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.lattice_sgs"]], "lattice_sgs (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.lattice_sgs"]], "lib_bb (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.lib_bb"]], "lib_bb (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.lib_bb"]], "lib_path (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.lib_path"]], "lib_path (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.lib_path"]], "mass (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.mass"]], "mass (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.mass"]], "module": [[4, "module-pycofbuilder"], [4, "module-pycofbuilder.building_block"], [4, "module-pycofbuilder.cjson"], [4, "module-pycofbuilder.framework"], [4, "module-pycofbuilder.io_tools"], [4, "module-pycofbuilder.tools"]], "multiplicity (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.multiplicity"]], "multiplicity (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.multiplicity"]], "n_atoms() (pycofbuilder.buildingblock method)": [[4, "pycofbuilder.BuildingBlock.n_atoms"]], "n_atoms() (pycofbuilder.building_block.buildingblock method)": [[4, "pycofbuilder.building_block.BuildingBlock.n_atoms"]], "name (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.name"]], "name (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.name"]], "name (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.name"]], "out_dir (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.out_dir"]], "out_dir (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.out_dir"]], "partial_charges (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.partial_charges"]], "print_command() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.print_command"]], "print_framework_name() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.print_framework_name"]], "print_structure() (pycofbuilder.buildingblock method)": [[4, "pycofbuilder.BuildingBlock.print_structure"]], "print_structure() (pycofbuilder.building_block.buildingblock method)": [[4, "pycofbuilder.building_block.BuildingBlock.print_structure"]], "properties (pycofbuilder.cjson.chemjson attribute)": [[4, "pycofbuilder.cjson.ChemJSON.properties"]], "pycofbuilder": [[4, "module-pycofbuilder"]], "pycofbuilder.building_block": [[4, "module-pycofbuilder.building_block"]], "pycofbuilder.cjson": [[4, "module-pycofbuilder.cjson"]], "pycofbuilder.framework": [[4, "module-pycofbuilder.framework"]], "pycofbuilder.io_tools": [[4, "module-pycofbuilder.io_tools"]], "pycofbuilder.tools": [[4, "module-pycofbuilder.tools"]], "read_cif() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.read_cif"]], "read_gjf_file() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.read_gjf_file"]], "read_json() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.read_json"]], "read_xyz_file() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.read_xyz_file"]], "remove_x() (pycofbuilder.buildingblock method)": [[4, "pycofbuilder.BuildingBlock.remove_X"]], "remove_x() (pycofbuilder.building_block.buildingblock method)": [[4, "pycofbuilder.building_block.BuildingBlock.remove_X"]], "replace_x() (pycofbuilder.buildingblock method)": [[4, "pycofbuilder.BuildingBlock.replace_X"]], "replace_x() (pycofbuilder.building_block.buildingblock method)": [[4, "pycofbuilder.building_block.BuildingBlock.replace_X"]], "rmsd() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.rmsd"]], "rotation_matrix_from_vectors() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.rotation_matrix_from_vectors"]], "save() (pycofbuilder.buildingblock method)": [[4, "pycofbuilder.BuildingBlock.save"]], "save() (pycofbuilder.framework method)": [[4, "id11"], [4, "pycofbuilder.Framework.save"]], "save() (pycofbuilder.building_block.buildingblock method)": [[4, "pycofbuilder.building_block.BuildingBlock.save"]], "save() (pycofbuilder.framework.framework method)": [[4, "id5"], [4, "pycofbuilder.framework.Framework.save"]], "save_bb (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.save_bb"]], "save_bb (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.save_bb"]], "save_chemjson() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_chemjson"]], "save_cif() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_cif"]], "save_csv() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_csv"]], "save_gjf() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_gjf"]], "save_json() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_json"]], "save_pdb() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_pdb"]], "save_pqr() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_pqr"]], "save_qe() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_qe"]], "save_turbomole() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_turbomole"]], "save_vasp() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_vasp"]], "save_xsf() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_xsf"]], "save_xyz() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.save_xyz"]], "set_atomic_numbers() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.set_atomic_numbers"]], "set_atomic_types() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.set_atomic_types"]], "set_cartesian_positions() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.set_cartesian_positions"]], "set_cell_matrix() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.set_cell_matrix"]], "set_cell_parameters() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.set_cell_parameters"]], "set_fractional_positions() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.set_fractional_positions"]], "set_properties() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.set_properties"]], "smiles_to_xsmiles() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.smiles_to_xsmiles"]], "space_group (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.space_group"]], "space_group (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.space_group"]], "space_group_n (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.space_group_n"]], "space_group_n (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.space_group_n"]], "stacking (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.stacking"]], "stacking (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.stacking"]], "symm_tol (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.symm_tol"]], "symm_tol (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.symm_tol"]], "topology (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.topology"]], "topology (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.topology"]], "unit_vector() (in module pycofbuilder.tools)": [[4, "pycofbuilder.tools.unit_vector"]], "verbosity (pycofbuilder.framework attribute)": [[4, "pycofbuilder.Framework.verbosity"]], "verbosity (pycofbuilder.framework.framework attribute)": [[4, "pycofbuilder.framework.Framework.verbosity"]], "write_cjson() (pycofbuilder.cjson.chemjson method)": [[4, "pycofbuilder.cjson.ChemJSON.write_cjson"]], "write_json() (in module pycofbuilder.io_tools)": [[4, "pycofbuilder.io_tools.write_json"]]}})