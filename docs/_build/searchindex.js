Search.setIndex({"docnames": ["building_blocks/Func", "building_blocks/H6", "building_blocks/L2", "building_blocks/Q", "building_blocks/S4", "building_blocks/T3", "building_blocks/index", "first_steps/file_formats", "first_steps/install", "first_steps/nomenclature", "first_steps/simple_use", "first_steps/visualization", "index", "pycofbuilder", "tutorials/bb_creation"], "filenames": ["building_blocks/Func.rst", "building_blocks/H6.rst", "building_blocks/L2.rst", "building_blocks/Q.rst", "building_blocks/S4.rst", "building_blocks/T3.rst", "building_blocks/index.rst", "first_steps/file_formats.rst", "first_steps/install.rst", "first_steps/nomenclature.rst", "first_steps/simple_use.rst", "first_steps/visualization.rst", "index.rst", "pycofbuilder.rst", "tutorials/bb_creation.rst"], "titles": ["Functional Groups (R)", "Hexagonal hexatopic cores (H6)", "Linear ditopic cores (L2)", "Connection Groups (Q)", "Square tetratopic cores (S4)", "Triangular tritopic cores (T3)", "&lt;no title&gt;", "File formats supported by pyCOFBuilder", "Installing pyCOFBuilder", "COFs and Building Blocks nomenclature", "Generating COF structures", "Visualizing the structures generated by pyCOFBuilder", "Welcome to pyCOFBuilder\u2019s documentation!", "pyCOFBuilder package", "Creation of new building blocks"], "terms": {"document": [0, 1, 2, 3, 4, 5, 9, 13], "index": [0, 1, 2, 3, 4, 5, 9, 12, 13], "name": [0, 1, 2, 3, 4, 5, 9, 10, 13, 14], "code": [0, 1, 2, 3, 4, 5, 9, 10, 13, 14], "select": [0, 1, 2, 3, 4, 5, 7, 9, 10, 13], "text": [0, 1, 2, 3, 4, 5, 9, 13], "smart": [0, 1, 2, 3, 4, 5, 9], "all": [0, 1, 2, 3, 4, 5, 9, 13, 14], "match": [0, 1, 2, 3, 4, 5, 9, 13], "unselect": [0, 1, 2, 3, 4, 5, 9], "invert": [0, 1, 2, 3, 4, 5, 9], "copi": [0, 1, 2, 3, 4, 5, 9], "clipboard": [0, 1, 2, 3, 4, 5, 9], "save": [0, 1, 2, 3, 4, 5, 9, 10, 11, 13, 14], "smile": [0, 1, 2, 3, 4, 5, 9, 10, 13, 14], "csv": [0, 1, 2, 3, 4, 5, 9, 13], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14], "current": [7, 9, 10, 13], "possibl": [7, 8, 10], "follow": [7, 8, 9, 10, 14], "cif": [7, 10, 13], "xsf": [7, 10, 13], "pdb": [7, 10, 13], "cjson": [7, 10, 12, 14], "vasp": [7, 10, 13], "turbomol": [7, 10, 13], "pqr": [7, 10, 13], "qe": [7, 10, 13], "gjf": [7, 10, 13, 14], "xyz": [7, 10, 13, 14], "The": [8, 9, 10, 11, 12, 13, 14], "packag": [8, 12], "written": 8, "python": [8, 12], "few": 8, "depend": [8, 13], "easiest": 8, "wai": [8, 9, 14], "conda": 8, "manag": 8, "If": [8, 12, 13], "you": [8, 10, 12, 14], "do": 8, "have": 8, "we": [8, 9, 14], "recommend": [8, 14], "anaconda": 8, "distribut": 8, "onc": [8, 14], "can": [8, 9, 10, 11, 12, 13, 14], "creat": [8, 10, 12, 13], "new": [8, 12], "command": 8, "env": 8, "file": [8, 10, 12, 13], "yml": 8, "3": [8, 9, 10, 13, 14], "10": 8, "pymatgen": 8, "2022": 8, "0": [8, 10, 13, 14], "numpi": [8, 13], "scipi": 8, "6": [8, 9, 10, 13, 14], "simplejson": 8, "ase": 8, "gemmi": 8, "don": [8, 14], "t": [8, 9, 14], "forget": [8, 14], "activ": 8, "befor": 8, "run": 8, "To": [8, 9, 10], "so": [8, 13], "It": 8, "just": [8, 12, 14], "download": 8, "sy": 8, "exemplifi": 8, "below": [8, 9, 14], "append": 8, "path": [8, 13], "path_to_pycofbuild": 8, "src": [8, 14], "pcb": [8, 10], "rememb": 8, "chang": [8, 9, 10, 12, 13], "directori": [8, 13], "where": [8, 9, 13, 14], "In": [9, 13], "order": [9, 14], "ensur": 9, "greater": 9, "reproduc": 9, "well": 9, "quickli": 9, "easili": [9, 10, 12], "access": [9, 10], "relev": 9, "inform": [9, 10, 12, 13, 14], "from": [9, 13, 14], "ve": 9, "develop": 9, "simpl": [9, 12], "thi": [9, 10, 13, 14], "structur": [9, 12, 13], "gener": [9, 12, 14], "speak": 9, "describ": 9, "coval": [9, 12, 13], "bond": [9, 13], "underli": 9, "present": 9, "specif": [9, 10, 13], "pattern": [9, 12], "degre": [9, 12, 13], "buildingblock1": 9, "buildingblock2": 9, "pycofbuild": [9, 10], "expect": 9, "fix": 9, "format": [9, 10, 11, 12, 13, 14], "each": [9, 13], "characterist": 9, "card": 9, "separ": 9, "dash": 9, "ar": [9, 12, 13, 14], "smaller": 9, "reticular": [9, 12, 13], "2d": [9, 12, 13], "3d": [9, 12, 13, 14], "also": [9, 12, 13], "set": [9, 10, 12, 13, 14], "rule": 9, "symmetry_core_connector_functionalgroupr1_functionalgroupr2_functionalgroupr3_": 9, "For": [9, 14], "4": [9, 14], "letter": [9, 14], "refer": [9, 14], "type": [9, 13, 14], "assembli": 9, "ex": 9, "nh2": 9, "cho": 9, "conhnh2": 9, "etc": [9, 14], "functionalgrouprn": 9, "nth": 9, "accord": 9, "avail": [9, 13], "note": 9, "everi": 9, "an": [9, 10, 12, 13, 14], "underlin": 9, "_": 9, "make": 9, "easi": 9, "split": 9, "compos": 9, "tabl": 9, "show": 9, "pleas": 9, "element": [9, 13, 14], "implement": [9, 13], "l": 9, "2": [9, 10, 13, 14], "line": 9, "triangl": 9, "": 9, "r": [9, 13, 14], "rectangl": 9, "tetrahedron": 9, "o": [9, 10, 14], "octahedron": 9, "p": [9, 10], "trigon": 9, "prism": 9, "h": [9, 10], "c": [9, 10, 13, 14], "8": 9, "cube": 9, "A": [9, 10, 13], "antipr": 9, "e": [9, 14], "octagon": 9, "b": [9, 13], "12": [9, 10, 14], "cuboctahedron": 9, "icosahedron": 9, "u": 9, "truncat": 9, "x": [9, 13, 14], "three": 9, "augment": 9, "_a": 9, "t3_benz_nh2_oh": 10, "l2_benz_cho_h": 10, "hcb_a": 10, "aa": 10, "import": [10, 14], "framework": [10, 12], "t3_benz_cho_oh": 10, "l2_benz_nh2_h": 10, "fmt": [10, 13], "supercel": [10, 13], "1": [10, 13, 14], "save_dir": [10, 13], "should": [10, 14], "see": 10, "output": [10, 13], "l2_benz_cho_h_h": 10, "hexagon": [10, 13], "p6": 10, "m": 10, "175": 10, "sym": 10, "op": 10, "default": [10, 13, 14], "other": [10, 12, 14], "valu": [10, 13], "option": [10, 13, 14], "out": [10, 13], "folder": [10, 13, 14], "print": [10, 13], "some": [10, 12, 14], "about": 10, "turn": 10, "off": [10, 13], "silent": 10, "true": [10, 13], "besid": 10, "variabl": 10, "now": 10, "object": [10, 13, 14], "ha": [10, 13], "attribut": 10, "n": [10, 13], "c1": [10, 14], "c1o": 10, "lattic": [10, 13], "arrai": [10, 13], "22": 10, "49540055": 10, "11": 10, "24770028": 10, "19": [10, 13], "48158835": 10, "n_atom": [10, 13], "72": 10, "space_group": [10, 13], "sever": [11, 14], "differ": [11, 12], "thu": [11, 13], "thei": 11, "us": [11, 12, 13], "softwar": [11, 14], "base": [12, 13], "organ": [12, 13], "builder": 12, "open": 12, "sourc": [12, 13], "tool": 12, "manipul": [12, 13], "cof": [12, 13], "approach": 12, "provid": 12, "lightweight": 12, "fast": 12, "method": [12, 13], "topologi": [12, 13], "build": [12, 13], "block": [12, 13], "connect": 12, "chemistri": 12, "ad": 12, "function": [12, 13], "group": [12, 13], "stack": [12, 13], "interpenetr": 12, "design": 12, "integr": 12, "further": 12, "analysi": [12, 13], "simul": 12, "here": [12, 13], "find": [12, 13], "tutori": 12, "exampl": [12, 13, 14], "how": [12, 14], "instal": 12, "These": 12, "aim": 12, "user": 12, "peopl": 12, "more": 12, "experi": 12, "molecular": [12, 14], "model": 12, "veri": 12, "basic": 12, "familiar": 12, "mayb": 12, "best": 12, "start": 12, "otherwis": [12, 13], "skip": 12, "go": 12, "next": 12, "section": 12, "nomenclatur": 12, "support": 12, "visual": 12, "submodul": 12, "building_block": 12, "modul": [12, 14], "io_tool": 12, "search": 12, "page": 12, "detail": 13, "buildingblock": 13, "class": 13, "none": 13, "verbos": 13, "fals": 13, "save_bb": 13, "check_exist": 13, "from_nam": 13, "automat": 13, "read": [13, 14], "buid": 13, "its": 13, "get_available_r": 13, "get": [13, 14], "list": 13, "get_available_conector": 13, "conector": 13, "get_available_cor": 13, "core": 13, "get_buildingblock_list": 13, "shape": 13, "connector_group": 13, "return": 13, "number": [13, 14], "atom": [13, 14], "unitari": 13, "cell": 13, "print_structur": 13, "atom_label": 13, "pos_x": 13, "pos_i": 13, "pos_z": 13, "remove_x": 13, "replace_x": 13, "target_typ": 13, "extens": 13, "chemic": [13, 14], "json": [13, 14], "chemjson": [13, 14], "manupul": 13, "file_nam": 13, "str": 13, "cell_paramet": 13, "paramet": 13, "cell_matrix": 13, "matrix": 13, "cartesian_posit": 13, "cartesian": 13, "posit": 13, "fractional_posit": 13, "fraction": 13, "atomic_numb": 13, "atomic_typ": 13, "atomic_label": 13, "label": [13, 14], "formula": [13, 14], "properti": [13, 14], "dict": 13, "partial_charg": 13, "dictionari": 13, "contan": 13, "partial": 13, "charg": 13, "ddec": 13, "15": 13, "eqeq": 13, "05": 13, "as_dict": 13, "from_cif": 13, "given": 13, "from_cjson": 13, "from_gjf": [13, 14], "gaussian": 13, "input": 13, "from_xyz": 13, "set_atomic_numb": 13, "calcul": 13, "updat": 13, "set_atomic_typ": 13, "set_cartesian_posit": 13, "set_cell_matrix": 13, "set_cell_paramet": 13, "set_fractional_posit": 13, "set_properti": 13, "write_cjson": 13, "write": 13, "definit": 13, "out_dir": 13, "repres": 13, "entiti": 13, "materi": 13, "result": 13, "defin": [13, 14], "control": 13, "normal": 13, "high": 13, "debug": 13, "bool": 13, "lib_path": 13, "diment": 13, "lattice_sg": 13, "space_group_n": 13, "mass": 13, "composit": 13, "int": 13, "multipl": 13, "chiral": 13, "atom_typ": 13, "atom_po": 13, "symm_tol": 13, "float": 13, "angle_tol": 13, "available_2d_topologi": 13, "available_3d_topologi": 13, "available_topologi": 13, "available_stack": 13, "stake": 13, "lib_bb": 13, "string": 13, "contain": 13, "bb_lib": 13, "check_name_concist": 13, "frameworknam": 13, "tupl": 13, "check": 13, "correct": 13, "net": 13, "case": [13, 14], "error": 13, "rais": 13, "requir": [13, 14], "from_building_block": 13, "bb1": 13, "bb2": 13, "kwarg": 13, "first": [13, 14], "second": 13, "network": 13, "get_available_topologi": 13, "dimension": 13, "print_result": 13, "dimensionality_list": 13, "primit": 13, "By": 13, "convent": 13, "convert_cif_2_q": 13, "out_path": 13, "convert": [13, 14], "quantum": 13, "espresso": 13, "doe": 13, "neet": 13, "extent": 13, "convert_cif_2_xyz": 13, "convert_gjf_2_xyz": 13, "convert_json_2_cif": 13, "origin_path": 13, "destiny_path": 13, "charge_typ": 13, "convert_xyz_2_gjf": 13, "create_cof_json": 13, "empti": [13, 14], "create_empty_cjson": 13, "create_structure_cjson": 13, "structurenam": 13, "cellparamet": 13, "cellmatrix": 13, "atomtyp": 13, "atomposit": 13, "cartesianposit": 13, "atomlabel": 13, "bondord": 13, "partialcharg": 13, "generate_mol_dict": 13, "read_cif": 13, "conta": 13, "nx3": 13, "coordin": 13, "3x3": 13, "vector": 13, "read_gjf_fil": 13, "read_json": 13, "read_xyz_fil": 13, "save_chemjson": 13, "frac_coord": 13, "save_cif": 13, "save_csv": 13, "data": [13, 14], "delimit": 13, "head": 13, "column": 13, "save_gjf": 13, "opt": 13, "pm6": 13, "save_json": 13, "save_pdb": 13, "ndarrai": 13, "form": 13, "save_pqr": 13, "save_q": 13, "calc_typ": 13, "scf": 13, "pwscf": 13, "input_dict": 13, "specifi": 13, "quantumespresso": 13, "must": 13, "kei": 13, "system": 13, "electron": 13, "ion": 13, "correspond": 13, "kpoint": 13, "item": 13, "grid": 13, "integ": 13, "addition": 13, "kspace": 13, "space": 13, "pw": 13, "nscf": 13, "band": 13, "vc": 13, "relax": 13, "save_turbomol": 13, "coord": [13, 14], "save_vasp": 13, "coords_are_cartesian": 13, "save_xsf": 13, "save_xyz": 13, "write_json": 13, "cof_json": 13, "angl": 13, "v1": 13, "v2": 13, "unit": 13, "between": [13, 14], "two": 13, "dimens": 13, "could": 13, "radian": 13, "co": 13, "calculate_unitcel": 13, "cutoff": 13, "repetit": 13, "length": 13, "larger": 13, "than": 13, "twice": 13, "interact": 13, "potenti": 13, "cut": 13, "radiu": 13, "raspa": 13, "consid": 13, "perpendicular": 13, "direct": 13, "ab": 13, "bc": 13, "ca": 13, "plane": 13, "who": 13, "crystallograph": 13, "would": 13, "project": 13, "mean": 13, "cross": 13, "product": 13, "repit": 13, "y": [13, 14], "z": 13, "cell_to_cellpar": 13, "alpha": 13, "beta": 13, "gamma": 13, "unless": 13, "v3": 13, "cellpar": 13, "cell_to_ibrav": 13, "ibrav": 13, "cellpar_to_cel": 13, "ab_norm": 13, "a_direct": 13, "orient": 13, "parallel": 13, "which": 13, "va": 13, "vb": 13, "along": 13, "row": 13, "onto": 13, "cellpar_to_lammpsbox": 13, "angle_in_degre": 13, "box": 13, "lx": 13, "ly": 13, "lz": 13, "xy": 13, "xz": 13, "yz": 13, "lammp": 13, "param": 13, "edg": 13, "side": 13, "express": 13, "1x6": 13, "array_lik": 13, "change_x_atom": 13, "bond_atom": 13, "desir": 13, "remov": 13, "process": 13, "po": 13, "classify_unit_cel": 13, "thr": 13, "001": 13, "determin": 13, "bravai": 13, "cubic": 13, "tetragon": 13, "orthorhomb": 13, "monoclin": 13, "triclin": 13, "threshold": 13, "numer": 13, "1e": 13, "cell_typ": 13, "closest_atom": 13, "label_1": 13, "pos_1": 13, "closest": 13, "closest_label": 13, "closest_posit": 13, "euclidian_dist": 13, "euclidian": 13, "distanc": [13, 14], "closest_atom_struc": 13, "create_cellbox": 13, "cellbox": 13, "same": [13, 14], "elements_dict": 13, "atomic_mass": 13, "symbol": 13, "prop": 13, "full_nam": 13, "polariz": 13, "pauling_electroneg": 13, "thermo_electroneg": 13, "mulliken_electroneg": 13, "sanderson_electroneg": 13, "allen_electroneg": 13, "ghosh_electroneg": 13, "martynov_batsanov_electroneg": 13, "atomic_radiu": 13, "covalent_radiu": 13, "vdw_radiu": 13, "prop_dic": 13, "respect": 13, "equal_valu": 13, "val1": 13, "val2": 13, "equal": 13, "find_index": 13, "e_list": 13, "formula_from_atom_list": 13, "get_bond_atom": 13, "connector_1": 13, "connector_2": 13, "get_cartesian_to_fractional_matrix": 13, "dtype": 13, "transform": 13, "t_matrix": 13, "rotat": 13, "r_frac": 13, "np": 13, "dot": 13, "r_cart": 13, "get_fractional_to_cartesian_matrix": 13, "cell_a": 13, "cell_b": 13, "cell_c": 13, "v_cart": 13, "v_frac": 13, "get_kgrid": 13, "k": 13, "point": [13, 14], "reciproc": 13, "kx": 13, "ky": 13, "kz": 13, "get_reciprocal_vector": 13, "b1": 13, "b_1": 13, "b2": 13, "b_2": 13, "b3": 13, "b_3": 13, "ibrav_to_cel": 13, "celldm1": 13, "celldm2": 13, "celldm3": 13, "celldm4": 13, "celldm5": 13, "celldm6": 13, "celldmx": 13, "print_command": 13, "print_framework_nam": 13, "hall": 13, "space_numb": 13, "symm_op": 13, "rmsd": 13, "v": 13, "w": 13, "root": 13, "squar": 13, "deviat": 13, "d": 13, "rotation_matrix_from_vector": 13, "vec1": 13, "vec2": 13, "align": 13, "rotation_matrix": 13, "when": 13, "appli": [13, 14], "smiles_to_xsmil": 13, "smiles_str": 13, "extend": 13, "xsmile": [13, 14], "special": [13, 14], "xsmiles_label": [13, 14], "imag": [13, 14], "unit_vector": 13, "step": 14, "need": 14, "prefer": 14, "g": 14, "avogadro": 14, "gaussview": 14, "Then": 14, "chemicaljson": 14, "csjon": 14, "although": 14, "done": 14, "directli": 14, "avalil": 14, "within": 14, "allow": 14, "convers": 14, "manner": 14, "fulli": 14, "librari": 14, "proper": 14, "ani": 14, "your": 14, "choic": 14, "add": 14, "adit": 14, "being": 14, "q": 14, "ry": 14, "molecul": 14, "want": 14, "5": 14, "\u00e5": 14, "presenc": 14, "mandatori": 14, "attach": 14, "actual": 14, "howev": 14, "necessari": 14, "pseudoatom": 14, "9": 14, "carbon": 14, "respectivelli": 14, "final": 14, "espect": 14, "linker": 14, "after": 14, "cl": 14, "27": 14, "obtain": 14, "77": 14, "onli": 14, "new_bb": 14, "conatin": 14, "getcwd": 14, "l2_benz": 14, "benzen": 14, "recomend": 14, "them": 14, "take": 14, "full": 14, "advantag": 14, "capabl": 14, "r2": 14, "r1": 14, "benz": 14, "write_cjson_fil": 14, "compar": 14, "q2": 14, "c6": 14, "r22": 14, "r12": 14, "21383527": 14, "70080812": 14, "40161624": 14, "07986067": 14, "20080812": 14, "00000000": 14, "hf": 14, "21g": 14}, "objects": {"": [[13, 0, 0, "-", "pycofbuilder"]], "pycofbuilder": [[13, 1, 1, "", "BuildingBlock"], [13, 1, 1, "", "Framework"], [13, 0, 0, "-", "building_block"], [13, 0, 0, "-", "cjson"], [13, 0, 0, "-", "framework"], [13, 0, 0, "-", "io_tools"], [13, 0, 0, "-", "tools"]], "pycofbuilder.BuildingBlock": [[13, 2, 1, "", "check_existence"], [13, 2, 1, "", "from_name"], [13, 2, 1, "", "get_available_R"], [13, 2, 1, "", "get_available_conector"], [13, 2, 1, "", "get_available_core"], [13, 2, 1, "", "get_buildingblock_list"], [13, 2, 1, "", "n_atoms"], [13, 2, 1, "", "print_structure"], [13, 2, 1, "", "remove_X"], [13, 2, 1, "", "replace_X"], [13, 2, 1, "", "save"]], "pycofbuilder.Framework": [[13, 3, 1, "", "angle_tol"], [13, 3, 1, "", "atom_pos"], [13, 3, 1, "", "atom_types"], [13, 3, 1, "", "available_2D_topologies"], [13, 3, 1, "", "available_3D_topologies"], [13, 3, 1, "", "available_stacking"], [13, 3, 1, "", "available_topologies"], [13, 3, 1, "", "charge"], [13, 2, 1, "", "check_name_concistency"], [13, 3, 1, "", "chirality"], [13, 3, 1, "", "composition"], [13, 3, 1, "", "dimention"], [13, 2, 1, "", "from_building_blocks"], [13, 2, 1, "", "from_name"], [13, 2, 1, "", "get_available_topologies"], [13, 3, 1, "id1", "lattice"], [13, 3, 1, "", "lattice_sgs"], [13, 3, 1, "", "lib_bb"], [13, 3, 1, "", "lib_path"], [13, 3, 1, "", "mass"], [13, 3, 1, "", "multiplicity"], [13, 3, 1, "", "name"], [13, 3, 1, "", "out_dir"], [13, 2, 1, "", "save"], [13, 3, 1, "", "save_bb"], [13, 3, 1, "", "space_group"], [13, 3, 1, "", "space_group_n"], [13, 3, 1, "", "stacking"], [13, 3, 1, "", "symm_tol"], [13, 3, 1, "", "topology"], [13, 3, 1, "", "verbosity"]], "pycofbuilder.building_block": [[13, 1, 1, "", "BuildingBlock"]], "pycofbuilder.building_block.BuildingBlock": [[13, 2, 1, "", "check_existence"], [13, 2, 1, "", "from_name"], [13, 2, 1, "", "get_available_R"], [13, 2, 1, "", "get_available_conector"], [13, 2, 1, "", "get_available_core"], [13, 2, 1, "", "get_buildingblock_list"], [13, 2, 1, "", "n_atoms"], [13, 2, 1, "", "print_structure"], [13, 2, 1, "", "remove_X"], [13, 2, 1, "", "replace_X"], [13, 2, 1, "", "save"]], "pycofbuilder.cjson": [[13, 1, 1, "", "ChemJSON"]], "pycofbuilder.cjson.ChemJSON": [[13, 2, 1, "", "as_dict"], [13, 3, 1, "", "atomic_labels"], [13, 3, 1, "", "atomic_numbers"], [13, 3, 1, "", "atomic_types"], [13, 3, 1, "", "cartesian_positions"], [13, 3, 1, "", "cell_matrix"], [13, 3, 1, "", "cell_parameters"], [13, 3, 1, "", "file_name"], [13, 3, 1, "", "formula"], [13, 3, 1, "", "fractional_positions"], [13, 2, 1, "", "from_cif"], [13, 2, 1, "", "from_cjson"], [13, 2, 1, "", "from_gjf"], [13, 2, 1, "", "from_xyz"], [13, 3, 1, "", "name"], [13, 3, 1, "", "partial_charges"], [13, 3, 1, "", "properties"], [13, 2, 1, "", "set_atomic_numbers"], [13, 2, 1, "", "set_atomic_types"], [13, 2, 1, "", "set_cartesian_positions"], [13, 2, 1, "", "set_cell_matrix"], [13, 2, 1, "", "set_cell_parameters"], [13, 2, 1, "", "set_fractional_positions"], [13, 2, 1, "", "set_properties"], [13, 2, 1, "", "write_cjson"]], "pycofbuilder.framework": [[13, 1, 1, "", "Framework"]], "pycofbuilder.framework.Framework": [[13, 3, 1, "", "angle_tol"], [13, 3, 1, "", "atom_pos"], [13, 3, 1, "", "atom_types"], [13, 3, 1, "", "available_2D_topologies"], [13, 3, 1, "", "available_3D_topologies"], [13, 3, 1, "", "available_stacking"], [13, 3, 1, "", "available_topologies"], [13, 3, 1, "", "charge"], [13, 2, 1, "", "check_name_concistency"], [13, 3, 1, "", "chirality"], [13, 3, 1, "", "composition"], [13, 3, 1, "", "dimention"], [13, 2, 1, "", "from_building_blocks"], [13, 2, 1, "", "from_name"], [13, 2, 1, "", "get_available_topologies"], [13, 3, 1, "id0", "lattice"], [13, 3, 1, "", "lattice_sgs"], [13, 3, 1, "", "lib_bb"], [13, 3, 1, "", "lib_path"], [13, 3, 1, "", "mass"], [13, 3, 1, "", "multiplicity"], [13, 3, 1, "", "name"], [13, 3, 1, "", "out_dir"], [13, 2, 1, "", "save"], [13, 3, 1, "", "save_bb"], [13, 3, 1, "", "space_group"], [13, 3, 1, "", "space_group_n"], [13, 3, 1, "", "stacking"], [13, 3, 1, "", "symm_tol"], [13, 3, 1, "", "topology"], [13, 3, 1, "", "verbosity"]], "pycofbuilder.io_tools": [[13, 4, 1, "", "convert_cif_2_qe"], [13, 4, 1, "", "convert_cif_2_xyz"], [13, 4, 1, "", "convert_gjf_2_xyz"], [13, 4, 1, "", "convert_json_2_cif"], [13, 4, 1, "", "convert_xyz_2_gjf"], [13, 4, 1, "", "create_COF_json"], [13, 4, 1, "", "create_empty_CJSON"], [13, 4, 1, "", "create_structure_CJSON"], [13, 4, 1, "", "generate_mol_dict"], [13, 4, 1, "", "read_cif"], [13, 4, 1, "", "read_gjf_file"], [13, 4, 1, "", "read_json"], [13, 4, 1, "", "read_xyz_file"], [13, 4, 1, "", "save_chemjson"], [13, 4, 1, "", "save_cif"], [13, 4, 1, "", "save_csv"], [13, 4, 1, "", "save_gjf"], [13, 4, 1, "", "save_json"], [13, 4, 1, "", "save_pdb"], [13, 4, 1, "", "save_pqr"], [13, 4, 1, "", "save_qe"], [13, 4, 1, "", "save_turbomole"], [13, 4, 1, "", "save_vasp"], [13, 4, 1, "", "save_xsf"], [13, 4, 1, "", "save_xyz"], [13, 4, 1, "", "write_json"]], "pycofbuilder.tools": [[13, 4, 1, "", "angle"], [13, 4, 1, "", "calculate_UnitCells"], [13, 4, 1, "", "cell_to_cellpar"], [13, 4, 1, "", "cell_to_ibrav"], [13, 4, 1, "", "cellpar_to_cell"], [13, 4, 1, "", "cellpar_to_lammpsbox"], [13, 4, 1, "", "change_X_atoms"], [13, 4, 1, "", "classify_unit_cell"], [13, 4, 1, "", "closest_atom"], [13, 4, 1, "", "closest_atom_struc"], [13, 4, 1, "", "create_CellBox"], [13, 4, 1, "", "elements_dict"], [13, 4, 1, "", "equal_value"], [13, 4, 1, "", "find_index"], [13, 4, 1, "", "formula_from_atom_list"], [13, 4, 1, "", "get_bond_atom"], [13, 4, 1, "", "get_cartesian_to_fractional_matrix"], [13, 4, 1, "", "get_fractional_to_cartesian_matrix"], [13, 4, 1, "", "get_kgrid"], [13, 4, 1, "", "get_reciprocal_vectors"], [13, 4, 1, "", "ibrav_to_cell"], [13, 4, 1, "", "print_command"], [13, 4, 1, "", "print_framework_name"], [13, 4, 1, "", "rmsd"], [13, 4, 1, "", "rotation_matrix_from_vectors"], [13, 4, 1, "", "smiles_to_xsmiles"], [13, 4, 1, "", "unit_vector"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"function": [0, 9, 14], "group": [0, 3, 9, 14], "r": 0, "hexagon": [1, 9], "hexatop": [1, 9], "core": [1, 2, 4, 5, 9, 14], "h6": [1, 9], "linear": [2, 9], "ditop": [2, 9], "l2": [2, 9], "connect": [3, 9, 14], "q": 3, "squar": [4, 9], "tetratop": [4, 9], "s4": [4, 9], "triangular": [5, 9], "tritop": [5, 9], "t3": [5, 9], "file": [7, 14], "format": 7, "support": 7, "pycofbuild": [7, 8, 11, 12, 13, 14], "instal": 8, "set": 8, "environ": 8, "requir": 8, "option": 8, "1": 8, "us": [8, 9, 14], "pip": 8, "2": 8, "manual": 8, "import": 8, "modul": [8, 13], "cof": [9, 10], "build": [9, 14], "block": [9, 14], "nomenclatur": 9, "symmetri": 9, "symbol": 9, "number": 9, "geometr": 9, "figur": 9, "repres": 9, "organ": [9, 14], "connector": 9, "net": 9, "stack": 9, "interpenetr": 9, "gener": [10, 11], "structur": [10, 11, 14], "visual": 11, "welcom": 12, "": 12, "document": 12, "first": 12, "step": 12, "code": 12, "content": [12, 13], "indic": 12, "tabl": 12, "packag": 13, "submodul": 13, "building_block": 13, "cjson": 13, "framework": 13, "io_tool": 13, "tool": 13, "creation": 14, "new": 14, "creat": 14, "compat": 14}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Functional Groups (R)": [[0, "functional-groups-r"]], "Hexagonal hexatopic cores (H6)": [[1, "hexagonal-hexatopic-cores-h6"], [9, "hexagonal-hexatopic-cores-h6"]], "Linear ditopic cores (L2)": [[2, "linear-ditopic-cores-l2"], [9, "linear-ditopic-cores-l2"]], "Connection Groups (Q)": [[3, "connection-groups-q"]], "Square tetratopic cores (S4)": [[4, "square-tetratopic-cores-s4"]], "Triangular tritopic cores (T3)": [[5, "triangular-tritopic-cores-t3"], [9, "triangular-tritopic-cores-t3"]], "File formats supported by pyCOFBuilder": [[7, "file-formats-supported-by-pycofbuilder"]], "Installing pyCOFBuilder": [[8, "installing-pycofbuilder"]], "Setting the environment": [[8, "setting-the-environment"]], "Requirements": [[8, "requirements"]], "Installation": [[8, "installation"]], "Option 1: Using pip": [[8, "option-1-using-pip"]], "Option 2: Manually importing the module": [[8, "option-2-manually-importing-the-module"]], "COFs and Building Blocks nomenclature": [[9, "cofs-and-building-blocks-nomenclature"]], "COF nomenclature": [[9, "cof-nomenclature"]], "Building blocks": [[9, "building-blocks"]], "Symmetry": [[9, "symmetry"]], "Symbols, connectivity numbers, and geometric figures used to represent the building blocks.": [[9, "id1"]], "Organic Cores": [[9, "organic-cores"]], "Squared tetratopic cores (S4)": [[9, "squared-tetratopic-cores-s4"]], "Connector groups": [[9, "connector-groups"]], "Functional groups": [[9, "functional-groups"], [14, "functional-groups"]], "Nets": [[9, "nets"]], "Stacking / Interpenetration": [[9, "stacking-interpenetration"]], "Generating COF structures": [[10, "generating-cof-structures"]], "Visualizing the structures generated by pyCOFBuilder": [[11, "visualizing-the-structures-generated-by-pycofbuilder"]], "Welcome to pyCOFBuilder\u2019s documentation!": [[12, "welcome-to-pycofbuilder-s-documentation"]], "First steps": [[12, "first-steps"]], "Code contents:": [[12, null]], "Indices and tables": [[12, "indices-and-tables"]], "pyCOFBuilder package": [[13, "pycofbuilder-package"]], "Submodules": [[13, "submodules"]], "pycofbuilder.building_block module": [[13, "module-pycofbuilder.building_block"]], "pycofbuilder.cjson module": [[13, "module-pycofbuilder.cjson"]], "pycofbuilder.framework module": [[13, "module-pycofbuilder.framework"]], "pycofbuilder.io_tools module": [[13, "module-pycofbuilder.io_tools"]], "pycofbuilder.tools module": [[13, "module-pycofbuilder.tools"]], "Module contents": [[13, "module-pycofbuilder"]], "Creation of new building blocks": [[14, "creation-of-new-building-blocks"]], "Creating a new building block structure file": [[14, "creating-a-new-building-block-structure-file"]], "Organic cores": [[14, "organic-cores"]], "Connection groups": [[14, "connection-groups"]], "Creating a new building block file compatible with pyCOFBuilder": [[14, "creating-a-new-building-block-file-compatible-with-pycofbuilder"]], "Using the new building block in pyCOFBuilder": [[14, "using-the-new-building-block-in-pycofbuilder"]]}, "indexentries": {"buildingblock (class in pycofbuilder)": [[13, "pycofbuilder.BuildingBlock"]], "buildingblock (class in pycofbuilder.building_block)": [[13, "pycofbuilder.building_block.BuildingBlock"]], "chemjson (class in pycofbuilder.cjson)": [[13, "pycofbuilder.cjson.ChemJSON"]], "framework (class in pycofbuilder)": [[13, "pycofbuilder.Framework"]], "framework (class in pycofbuilder.framework)": [[13, "pycofbuilder.framework.Framework"]], "angle() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.angle"]], "angle_tol (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.angle_tol"]], "angle_tol (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.angle_tol"]], "as_dict() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.as_dict"]], "atom_pos (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.atom_pos"]], "atom_pos (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.atom_pos"]], "atom_types (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.atom_types"]], "atom_types (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.atom_types"]], "atomic_labels (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.atomic_labels"]], "atomic_numbers (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.atomic_numbers"]], "atomic_types (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.atomic_types"]], "available_2d_topologies (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.available_2D_topologies"]], "available_2d_topologies (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.available_2D_topologies"]], "available_3d_topologies (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.available_3D_topologies"]], "available_3d_topologies (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.available_3D_topologies"]], "available_stacking (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.available_stacking"]], "available_stacking (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.available_stacking"]], "available_topologies (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.available_topologies"]], "available_topologies (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.available_topologies"]], "calculate_unitcells() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.calculate_UnitCells"]], "cartesian_positions (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.cartesian_positions"]], "cell_matrix (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.cell_matrix"]], "cell_parameters (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.cell_parameters"]], "cell_to_cellpar() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.cell_to_cellpar"]], "cell_to_ibrav() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.cell_to_ibrav"]], "cellpar_to_cell() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.cellpar_to_cell"]], "cellpar_to_lammpsbox() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.cellpar_to_lammpsbox"]], "change_x_atoms() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.change_X_atoms"]], "charge (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.charge"]], "charge (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.charge"]], "check_existence() (pycofbuilder.buildingblock method)": [[13, "pycofbuilder.BuildingBlock.check_existence"]], "check_existence() (pycofbuilder.building_block.buildingblock method)": [[13, "pycofbuilder.building_block.BuildingBlock.check_existence"]], "check_name_concistency() (pycofbuilder.framework method)": [[13, "pycofbuilder.Framework.check_name_concistency"]], "check_name_concistency() (pycofbuilder.framework.framework method)": [[13, "pycofbuilder.framework.Framework.check_name_concistency"]], "chirality (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.chirality"]], "chirality (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.chirality"]], "classify_unit_cell() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.classify_unit_cell"]], "closest_atom() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.closest_atom"]], "closest_atom_struc() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.closest_atom_struc"]], "composition (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.composition"]], "composition (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.composition"]], "convert_cif_2_qe() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.convert_cif_2_qe"]], "convert_cif_2_xyz() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.convert_cif_2_xyz"]], "convert_gjf_2_xyz() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.convert_gjf_2_xyz"]], "convert_json_2_cif() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.convert_json_2_cif"]], "convert_xyz_2_gjf() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.convert_xyz_2_gjf"]], "create_cof_json() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.create_COF_json"]], "create_cellbox() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.create_CellBox"]], "create_empty_cjson() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.create_empty_CJSON"]], "create_structure_cjson() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.create_structure_CJSON"]], "dimention (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.dimention"]], "dimention (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.dimention"]], "elements_dict() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.elements_dict"]], "equal_value() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.equal_value"]], "file_name (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.file_name"]], "find_index() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.find_index"]], "formula (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.formula"]], "formula_from_atom_list() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.formula_from_atom_list"]], "fractional_positions (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.fractional_positions"]], "from_building_blocks() (pycofbuilder.framework method)": [[13, "pycofbuilder.Framework.from_building_blocks"]], "from_building_blocks() (pycofbuilder.framework.framework method)": [[13, "pycofbuilder.framework.Framework.from_building_blocks"]], "from_cif() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.from_cif"]], "from_cjson() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.from_cjson"]], "from_gjf() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.from_gjf"]], "from_name() (pycofbuilder.buildingblock method)": [[13, "pycofbuilder.BuildingBlock.from_name"]], "from_name() (pycofbuilder.framework method)": [[13, "pycofbuilder.Framework.from_name"]], "from_name() (pycofbuilder.building_block.buildingblock method)": [[13, "pycofbuilder.building_block.BuildingBlock.from_name"]], "from_name() (pycofbuilder.framework.framework method)": [[13, "pycofbuilder.framework.Framework.from_name"]], "from_xyz() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.from_xyz"]], "generate_mol_dict() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.generate_mol_dict"]], "get_available_r() (pycofbuilder.buildingblock method)": [[13, "pycofbuilder.BuildingBlock.get_available_R"]], "get_available_r() (pycofbuilder.building_block.buildingblock method)": [[13, "pycofbuilder.building_block.BuildingBlock.get_available_R"]], "get_available_conector() (pycofbuilder.buildingblock method)": [[13, "pycofbuilder.BuildingBlock.get_available_conector"]], "get_available_conector() (pycofbuilder.building_block.buildingblock method)": [[13, "pycofbuilder.building_block.BuildingBlock.get_available_conector"]], "get_available_core() (pycofbuilder.buildingblock method)": [[13, "pycofbuilder.BuildingBlock.get_available_core"]], "get_available_core() (pycofbuilder.building_block.buildingblock method)": [[13, "pycofbuilder.building_block.BuildingBlock.get_available_core"]], "get_available_topologies() (pycofbuilder.framework method)": [[13, "pycofbuilder.Framework.get_available_topologies"]], "get_available_topologies() (pycofbuilder.framework.framework method)": [[13, "pycofbuilder.framework.Framework.get_available_topologies"]], "get_bond_atom() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.get_bond_atom"]], "get_buildingblock_list() (pycofbuilder.buildingblock method)": [[13, "pycofbuilder.BuildingBlock.get_buildingblock_list"]], "get_buildingblock_list() (pycofbuilder.building_block.buildingblock method)": [[13, "pycofbuilder.building_block.BuildingBlock.get_buildingblock_list"]], "get_cartesian_to_fractional_matrix() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.get_cartesian_to_fractional_matrix"]], "get_fractional_to_cartesian_matrix() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.get_fractional_to_cartesian_matrix"]], "get_kgrid() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.get_kgrid"]], "get_reciprocal_vectors() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.get_reciprocal_vectors"]], "ibrav_to_cell() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.ibrav_to_cell"]], "lattice (pycofbuilder.framework attribute)": [[13, "id1"], [13, "pycofbuilder.Framework.lattice"]], "lattice (pycofbuilder.framework.framework attribute)": [[13, "id0"], [13, "pycofbuilder.framework.Framework.lattice"]], "lattice_sgs (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.lattice_sgs"]], "lattice_sgs (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.lattice_sgs"]], "lib_bb (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.lib_bb"]], "lib_bb (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.lib_bb"]], "lib_path (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.lib_path"]], "lib_path (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.lib_path"]], "mass (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.mass"]], "mass (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.mass"]], "module": [[13, "module-pycofbuilder"], [13, "module-pycofbuilder.building_block"], [13, "module-pycofbuilder.cjson"], [13, "module-pycofbuilder.framework"], [13, "module-pycofbuilder.io_tools"], [13, "module-pycofbuilder.tools"]], "multiplicity (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.multiplicity"]], "multiplicity (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.multiplicity"]], "n_atoms() (pycofbuilder.buildingblock method)": [[13, "pycofbuilder.BuildingBlock.n_atoms"]], "n_atoms() (pycofbuilder.building_block.buildingblock method)": [[13, "pycofbuilder.building_block.BuildingBlock.n_atoms"]], "name (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.name"]], "name (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.name"]], "name (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.name"]], "out_dir (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.out_dir"]], "out_dir (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.out_dir"]], "partial_charges (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.partial_charges"]], "print_command() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.print_command"]], "print_framework_name() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.print_framework_name"]], "print_structure() (pycofbuilder.buildingblock method)": [[13, "pycofbuilder.BuildingBlock.print_structure"]], "print_structure() (pycofbuilder.building_block.buildingblock method)": [[13, "pycofbuilder.building_block.BuildingBlock.print_structure"]], "properties (pycofbuilder.cjson.chemjson attribute)": [[13, "pycofbuilder.cjson.ChemJSON.properties"]], "pycofbuilder": [[13, "module-pycofbuilder"]], "pycofbuilder.building_block": [[13, "module-pycofbuilder.building_block"]], "pycofbuilder.cjson": [[13, "module-pycofbuilder.cjson"]], "pycofbuilder.framework": [[13, "module-pycofbuilder.framework"]], "pycofbuilder.io_tools": [[13, "module-pycofbuilder.io_tools"]], "pycofbuilder.tools": [[13, "module-pycofbuilder.tools"]], "read_cif() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.read_cif"]], "read_gjf_file() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.read_gjf_file"]], "read_json() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.read_json"]], "read_xyz_file() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.read_xyz_file"]], "remove_x() (pycofbuilder.buildingblock method)": [[13, "pycofbuilder.BuildingBlock.remove_X"]], "remove_x() (pycofbuilder.building_block.buildingblock method)": [[13, "pycofbuilder.building_block.BuildingBlock.remove_X"]], "replace_x() (pycofbuilder.buildingblock method)": [[13, "pycofbuilder.BuildingBlock.replace_X"]], "replace_x() (pycofbuilder.building_block.buildingblock method)": [[13, "pycofbuilder.building_block.BuildingBlock.replace_X"]], "rmsd() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.rmsd"]], "rotation_matrix_from_vectors() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.rotation_matrix_from_vectors"]], "save() (pycofbuilder.buildingblock method)": [[13, "pycofbuilder.BuildingBlock.save"]], "save() (pycofbuilder.framework method)": [[13, "pycofbuilder.Framework.save"]], "save() (pycofbuilder.building_block.buildingblock method)": [[13, "pycofbuilder.building_block.BuildingBlock.save"]], "save() (pycofbuilder.framework.framework method)": [[13, "pycofbuilder.framework.Framework.save"]], "save_bb (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.save_bb"]], "save_bb (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.save_bb"]], "save_chemjson() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_chemjson"]], "save_cif() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_cif"]], "save_csv() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_csv"]], "save_gjf() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_gjf"]], "save_json() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_json"]], "save_pdb() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_pdb"]], "save_pqr() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_pqr"]], "save_qe() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_qe"]], "save_turbomole() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_turbomole"]], "save_vasp() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_vasp"]], "save_xsf() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_xsf"]], "save_xyz() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.save_xyz"]], "set_atomic_numbers() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.set_atomic_numbers"]], "set_atomic_types() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.set_atomic_types"]], "set_cartesian_positions() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.set_cartesian_positions"]], "set_cell_matrix() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.set_cell_matrix"]], "set_cell_parameters() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.set_cell_parameters"]], "set_fractional_positions() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.set_fractional_positions"]], "set_properties() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.set_properties"]], "smiles_to_xsmiles() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.smiles_to_xsmiles"]], "space_group (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.space_group"]], "space_group (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.space_group"]], "space_group_n (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.space_group_n"]], "space_group_n (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.space_group_n"]], "stacking (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.stacking"]], "stacking (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.stacking"]], "symm_tol (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.symm_tol"]], "symm_tol (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.symm_tol"]], "topology (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.topology"]], "topology (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.topology"]], "unit_vector() (in module pycofbuilder.tools)": [[13, "pycofbuilder.tools.unit_vector"]], "verbosity (pycofbuilder.framework attribute)": [[13, "pycofbuilder.Framework.verbosity"]], "verbosity (pycofbuilder.framework.framework attribute)": [[13, "pycofbuilder.framework.Framework.verbosity"]], "write_cjson() (pycofbuilder.cjson.chemjson method)": [[13, "pycofbuilder.cjson.ChemJSON.write_cjson"]], "write_json() (in module pycofbuilder.io_tools)": [[13, "pycofbuilder.io_tools.write_json"]]}})